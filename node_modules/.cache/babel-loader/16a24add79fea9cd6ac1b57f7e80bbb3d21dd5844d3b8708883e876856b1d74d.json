{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VishwajithJayasinghe\\\\Documents\\\\MyDocs\\\\Projects\\\\React-front-end\\\\src\\\\components\\\\custom-text-field\\\\custome-text-field.tsx\";\nimport { TextField } from \"@mui/material\";\nimport { Field } from \"react-final-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomTextField = props => {\n  const {\n    name,\n    label,\n    textBoxFullWidth,\n    isMultiline,\n    rows\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Field, {\n      name: name,\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: props.input.name,\n          value: props.input.value,\n          onChange: props.input.onChange,\n          fullWidth: textBoxFullWidth,\n          multiline: isMultiline,\n          rows: rows,\n          inputProps: {\n            style: {\n              height: isMultiline ? \"100px\" : \"8px\"\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), props.meta.touched && props.meta.error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errorfield\",\n          children: props.meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = CustomTextField;\nexport default CustomTextField;\nvar _c;\n$RefreshReg$(_c, \"CustomTextField\");","map":{"version":3,"names":["TextField","Field","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomTextField","props","name","label","textBoxFullWidth","isMultiline","rows","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","input","value","onChange","fullWidth","multiline","inputProps","height","meta","touched","error","className","_c","$RefreshReg$"],"sources":["C:/Users/VishwajithJayasinghe/Documents/MyDocs/Projects/React-front-end/src/components/custom-text-field/custome-text-field.tsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport { Field } from \"react-final-form\";\r\n\r\ninterface CustomTextFieldProps {\r\n    name: string\r\n    label?: string\r\n    textBoxFullWidth? : boolean\r\n    isMultiline?: boolean\r\n    rows? : string | number\r\n}\r\n\r\nconst CustomTextField = (props : CustomTextFieldProps) => {\r\n    const { name, label, textBoxFullWidth, isMultiline, rows} = props;\r\n\r\n  return (\r\n    <>\r\n    <label style={{fontWeight: \"bold\"}}>{label}</label>\r\n    <Field name={name}>\r\n      {(props) => (\r\n        <div>\r\n          <TextField\r\n            name={props.input.name}\r\n            value={props.input.value}\r\n            onChange={props.input.onChange}\r\n            fullWidth ={textBoxFullWidth}\r\n            multiline ={isMultiline}\r\n            rows={rows}\r\n            inputProps={{\r\n                style: {\r\n                  height: isMultiline ? \"100px\" : \"8px\",\r\n                },\r\n              }}\r\n          />\r\n          {props.meta.touched && props.meta.error && <span className=\"errorfield\">{props.meta.error}</span>}\r\n        </div>\r\n      )}\r\n    </Field>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default CustomTextField;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAUzC,MAAMC,eAAe,GAAIC,KAA4B,IAAK;EACtD,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,gBAAgB;IAAEC,WAAW;IAAEC;EAAI,CAAC,GAAGL,KAAK;EAEnE,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACAV,OAAA;MAAOW,KAAK,EAAE;QAACC,UAAU,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEJ;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDhB,OAAA,CAACF,KAAK;MAACO,IAAI,EAAEA,IAAK;MAAAK,QAAA,EACdN,KAAK,iBACLJ,OAAA;QAAAU,QAAA,gBACEV,OAAA,CAACH,SAAS;UACRQ,IAAI,EAAED,KAAK,CAACa,KAAK,CAACZ,IAAK;UACvBa,KAAK,EAAEd,KAAK,CAACa,KAAK,CAACC,KAAM;UACzBC,QAAQ,EAAEf,KAAK,CAACa,KAAK,CAACE,QAAS;UAC/BC,SAAS,EAAGb,gBAAiB;UAC7Bc,SAAS,EAAGb,WAAY;UACxBC,IAAI,EAAEA,IAAK;UACXa,UAAU,EAAE;YACRX,KAAK,EAAE;cACLY,MAAM,EAAEf,WAAW,GAAG,OAAO,GAAG;YAClC;UACF;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACDZ,KAAK,CAACoB,IAAI,CAACC,OAAO,IAAIrB,KAAK,CAACoB,IAAI,CAACE,KAAK,iBAAI1B,OAAA;UAAM2B,SAAS,EAAC,YAAY;UAAAjB,QAAA,EAAEN,KAAK,CAACoB,IAAI,CAACE;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA,eACN,CAAC;AAGP,CAAC;AAACY,EAAA,GA7BIzB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}