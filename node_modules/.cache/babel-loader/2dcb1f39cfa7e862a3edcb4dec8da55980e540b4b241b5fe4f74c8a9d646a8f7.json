{"ast":null,"code":"import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { CreateEmployeeAPI, GetEmployeeAPI, GetEmployeeByCafeAPI, UpdateEmployeeAPI } from \"../../services/apiMethods\";\nimport { EmployeeActionTypes, createEmployeeFailed, createEmployeeSucceeded, findEmployeeFailed, findEmployeeSucceeded, getEmployeeListFailed, getEmployeeListSucceeded, updateEmployeeFailed, updateEmployeeSucceeded } from \"../actions/employeeAction\";\nfunction* GetEmployeesByCafeAPISaga(payload) {\n  try {\n    const {\n      data\n    } = yield call(GetEmployeeByCafeAPI, payload.payload.page, payload.payload.cafeId || \"\");\n    yield put(getEmployeeListSucceeded({\n      payload: data\n    }));\n  } catch (e) {\n    yield put(getEmployeeListFailed());\n  }\n}\n_c = GetEmployeesByCafeAPISaga;\nfunction* CreateEmployeeAPISaga(payload) {\n  try {\n    const {\n      data\n    } = yield call(CreateEmployeeAPI, payload.payload.employee);\n    yield put(createEmployeeSucceeded({\n      payload: data\n    }));\n  } catch (e) {\n    yield put(createEmployeeFailed());\n  }\n}\n_c2 = CreateEmployeeAPISaga;\nfunction* GetEmployeeAPISaga(payload) {\n  try {\n    const {\n      data\n    } = yield call(GetEmployeeAPI, payload.payload.id);\n    yield put(findEmployeeSucceeded({\n      payload: data\n    }));\n  } catch (e) {\n    yield put(findEmployeeFailed());\n  }\n}\n_c3 = GetEmployeeAPISaga;\nfunction* UpdateEmployeeAPISaga(payload) {\n  try {\n    const {\n      data\n    } = yield call(UpdateEmployeeAPI, payload.payload.employee);\n    yield put(updateEmployeeSucceeded({\n      payload: data\n    }));\n  } catch (e) {\n    yield put(updateEmployeeFailed(e));\n  }\n}\n_c4 = UpdateEmployeeAPISaga;\nexport default function* employeeSaga() {\n  yield all([takeLatest(EmployeeActionTypes.EMPLOYEE_FETCH_REQUEST, GetEmployeesByCafeAPISaga), takeLatest(EmployeeActionTypes.EMPLOYEE_CREATE_REQUEST, CreateEmployeeAPISaga), takeLatest(EmployeeActionTypes.EMPLOYEE_FIND_REQUEST, GetEmployeeAPISaga), takeLatest(EmployeeActionTypes.EMPLOYEE_UPDATE_REQUEST, UpdateEmployeeAPISaga)]);\n}\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GetEmployeesByCafeAPISaga\");\n$RefreshReg$(_c2, \"CreateEmployeeAPISaga\");\n$RefreshReg$(_c3, \"GetEmployeeAPISaga\");\n$RefreshReg$(_c4, \"UpdateEmployeeAPISaga\");","map":{"version":3,"names":["all","call","put","takeLatest","CreateEmployeeAPI","GetEmployeeAPI","GetEmployeeByCafeAPI","UpdateEmployeeAPI","EmployeeActionTypes","createEmployeeFailed","createEmployeeSucceeded","findEmployeeFailed","findEmployeeSucceeded","getEmployeeListFailed","getEmployeeListSucceeded","updateEmployeeFailed","updateEmployeeSucceeded","GetEmployeesByCafeAPISaga","payload","data","page","cafeId","e","_c","CreateEmployeeAPISaga","employee","_c2","GetEmployeeAPISaga","id","_c3","UpdateEmployeeAPISaga","_c4","employeeSaga","EMPLOYEE_FETCH_REQUEST","EMPLOYEE_CREATE_REQUEST","EMPLOYEE_FIND_REQUEST","EMPLOYEE_UPDATE_REQUEST","$RefreshReg$"],"sources":["C:/Users/VishwajithJayasinghe/Documents/MyDocs/Projects/React-front-end/src/store/sagas/employee.saga.ts"],"sourcesContent":["import { all, call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { CreateEmployeeAPI, GetEmployeeAPI, GetEmployeeByCafeAPI, UpdateEmployeeAPI } from \"../../services/apiMethods\";\r\nimport {\r\n  EmployeeActionTypes,\r\n  createEmployee,\r\n  createEmployeeFailed,\r\n  createEmployeeSucceeded,\r\n  findEmployee,\r\n  findEmployeeFailed,\r\n  findEmployeeSucceeded,\r\n  getEmployeeList,\r\n  getEmployeeListFailed,\r\n  getEmployeeListSucceeded,\r\n  updateEmployee,\r\n  updateEmployeeFailed,\r\n  updateEmployeeSucceeded,\r\n} from \"../actions/employeeAction\";\r\n\r\nfunction* GetEmployeesByCafeAPISaga(\r\n  payload: ReturnType<typeof getEmployeeList>\r\n): any {\r\n  try {\r\n    const { data } = yield call(GetEmployeeByCafeAPI, payload.payload.page, payload.payload.cafeId || \"\");\r\n    yield put(\r\n      getEmployeeListSucceeded({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    yield put(getEmployeeListFailed());\r\n  }\r\n}\r\n\r\nfunction* CreateEmployeeAPISaga( payload: ReturnType<typeof createEmployee>): any{\r\n  try {\r\n    const { data } = yield call(CreateEmployeeAPI, payload.payload.employee);\r\n    yield put(\r\n      createEmployeeSucceeded({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    yield put(createEmployeeFailed());\r\n  }\r\n}\r\n\r\nfunction* GetEmployeeAPISaga(payload: ReturnType<typeof findEmployee>){\r\n  try {\r\n    const { data } = yield call(GetEmployeeAPI, payload.payload.id);\r\n    yield put(\r\n      findEmployeeSucceeded({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    yield put(findEmployeeFailed());\r\n  }\r\n}\r\n\r\nfunction* UpdateEmployeeAPISaga( payload: ReturnType<typeof updateEmployee>): any{\r\n  try {\r\n    const { data } = yield call(UpdateEmployeeAPI, payload.payload.employee);\r\n    yield put(\r\n      updateEmployeeSucceeded({\r\n        payload: data,\r\n      })\r\n    );\r\n  } catch (e) {\r\n    yield put(updateEmployeeFailed(e));\r\n  }\r\n}\r\n\r\nexport default function* employeeSaga() {\r\n  yield all([\r\n    takeLatest(\r\n      EmployeeActionTypes.EMPLOYEE_FETCH_REQUEST,\r\n      GetEmployeesByCafeAPISaga\r\n    ),\r\n    takeLatest(\r\n      EmployeeActionTypes.EMPLOYEE_CREATE_REQUEST,\r\n      CreateEmployeeAPISaga\r\n    ),\r\n    takeLatest(\r\n      EmployeeActionTypes.EMPLOYEE_FIND_REQUEST,\r\n      GetEmployeeAPISaga\r\n    ),\r\n    takeLatest(\r\n      EmployeeActionTypes.EMPLOYEE_UPDATE_REQUEST,\r\n      UpdateEmployeeAPISaga\r\n    ),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}