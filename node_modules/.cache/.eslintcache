[{"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\index.tsx":"1","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\reportWebVitals.ts":"2","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\App.tsx":"3","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\configure-store.ts":"4","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\constants\\routes.ts":"5","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\sagas\\root.saga.ts":"6","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\reducers\\rootReducer.ts":"7","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\layout.tsx":"8","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\cafe\\view-cafe.tsx":"9","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\cafe\\edit-cafe.tsx":"10","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\employee\\edit-employee.tsx":"11","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\home\\home.tsx":"12","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\employee\\view-employee.tsx":"13","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\reducers\\employeeReducer.ts":"14","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\reducers\\cafeReducer.ts":"15","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\sagas\\employee.saga.ts":"16","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\sagas\\cafe.saga.ts":"17","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\constants\\common.ts":"18","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\actions\\employeeAction.ts":"19","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\actions\\cafeAction.ts":"20","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\data-table\\data-table.component.tsx":"21","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\utils\\common.ts":"22","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\hooks\\useCafeListMap.ts":"23","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\utils\\validations.ts":"24","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\cafe\\filter-section.tsx":"25","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\custom-text-field\\custome-text-field.tsx":"26","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\alert\\alert-box.tsx":"27","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\date-selector\\date-selector.tsx":"28","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\custom-select-field\\custom-select-field.tsx":"29","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\custom-radio-button\\custom-radio-button.tsx":"30","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\services\\apiMethods.ts":"31","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\date-selector\\date-selector.styles.ts":"32","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\services\\builder.ts":"33","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\helpers\\tokenHelper.ts":"34"},{"size":830,"mtime":1691930596457,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1691930596457,"results":"37","hashOfConfig":"36"},{"size":1788,"mtime":1691930596457,"results":"38","hashOfConfig":"36"},{"size":445,"mtime":1691930596457,"results":"39","hashOfConfig":"36"},{"size":361,"mtime":1691930596457,"results":"40","hashOfConfig":"36"},{"size":212,"mtime":1691930596457,"results":"41","hashOfConfig":"36"},{"size":320,"mtime":1691930596457,"results":"42","hashOfConfig":"36"},{"size":1335,"mtime":1691930596457,"results":"43","hashOfConfig":"36"},{"size":3463,"mtime":1691936881170,"results":"44","hashOfConfig":"36"},{"size":5216,"mtime":1691930596457,"results":"45","hashOfConfig":"36"},{"size":6504,"mtime":1691937224448,"results":"46","hashOfConfig":"36"},{"size":333,"mtime":1691937271314,"results":"47","hashOfConfig":"36"},{"size":2794,"mtime":1691930596457,"results":"48","hashOfConfig":"36"},{"size":2201,"mtime":1691930596457,"results":"49","hashOfConfig":"36"},{"size":2608,"mtime":1691930596457,"results":"50","hashOfConfig":"36"},{"size":2546,"mtime":1691937613537,"results":"51","hashOfConfig":"36"},{"size":2617,"mtime":1691937499577,"results":"52","hashOfConfig":"36"},{"size":746,"mtime":1691930596457,"results":"53","hashOfConfig":"36"},{"size":2586,"mtime":1691930596457,"results":"54","hashOfConfig":"36"},{"size":2686,"mtime":1691930596457,"results":"55","hashOfConfig":"36"},{"size":1040,"mtime":1691936755053,"results":"56","hashOfConfig":"36"},{"size":212,"mtime":1691930596457,"results":"57","hashOfConfig":"36"},{"size":519,"mtime":1691930596457,"results":"58","hashOfConfig":"36"},{"size":570,"mtime":1691930596457,"results":"59","hashOfConfig":"36"},{"size":1334,"mtime":1691936855303,"results":"60","hashOfConfig":"36"},{"size":1150,"mtime":1691930596457,"results":"61","hashOfConfig":"36"},{"size":377,"mtime":1691930596457,"results":"62","hashOfConfig":"36"},{"size":886,"mtime":1691930596457,"results":"63","hashOfConfig":"36"},{"size":1282,"mtime":1691930596457,"results":"64","hashOfConfig":"36"},{"size":1223,"mtime":1691930596457,"results":"65","hashOfConfig":"36"},{"size":1543,"mtime":1691930596457,"results":"66","hashOfConfig":"36"},{"size":303,"mtime":1691930596457,"results":"67","hashOfConfig":"36"},{"size":943,"mtime":1691930596457,"results":"68","hashOfConfig":"36"},{"size":596,"mtime":1691937295327,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y6qc7z",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\index.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\reportWebVitals.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\App.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\configure-store.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\constants\\routes.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\sagas\\root.saga.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\reducers\\rootReducer.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\layout.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\cafe\\view-cafe.tsx",["174"],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\cafe\\edit-cafe.tsx",["175"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppState } from \"../../../store/reducers/rootReducer\";\r\nimport { Form } from \"react-final-form\";\r\nimport { Cafe } from \"../../../store/states/cafeState\";\r\nimport { useNavigate, useParams } from \"react-router\";\r\nimport { VIEW_CAFE_ROUTE } from \"../../../constants/routes\";\r\nimport {\r\n  MAX_TEXTAREA_LENGHT,\r\n  MAX_TEXTAREA_LENGHT_MSG,\r\n  MAX_TEXT_LENGHT,\r\n  MIN_MAX_LENGHT_MSG,\r\n  MIN_TEXT_LENGHT,\r\n  REQUIRED_MSG,\r\n} from \"../../../constants/common\";\r\nimport {\r\n  checkStringMaxLength,\r\n  checkStringMinLength,\r\n} from \"../../../utils/validations\";\r\nimport { Box, Button, Stack } from \"@mui/material\";\r\nimport CustomTextField from \"../../custom-text-field/custome-text-field\";\r\nimport {\r\n  createCafe,\r\n  findCafe,\r\n  updateCafe,\r\n} from \"../../../store/actions/cafeAction\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AlertBox, { AlertBoxProps } from \"../../alert/alert-box\";\r\n\r\nconst EditCafe = () => {\r\n  const dispatch = useDispatch();\r\n  const routeParams = useParams();\r\n  const navigate = useNavigate();\r\n  const cafeState = useSelector((state: AppState) => state.cafe);\r\n  const [alertState, setAlertState] = useState<AlertBoxProps>({\r\n    message: \"\",\r\n    severity: \"info\",\r\n    showAlert: false,\r\n  });\r\n\r\n  const isCafeEdit = routeParams.id && routeParams.id.length > 0 ? true : false;\r\n\r\n  const selectedCafe = cafeState.response\r\n    ? cafeState.response.data[0]\r\n    : undefined;\r\n\r\n  useEffect(() => {\r\n    if (cafeState.loading) {\r\n      return;\r\n    }\r\n\r\n    //Success and error message settings for alert\r\n    if (cafeState.response && !cafeState.errors) {\r\n      setAlertState({\r\n        message: cafeState.response.message,\r\n        severity: \"success\",\r\n        showAlert: true,\r\n      });\r\n    } else if (cafeState.errors) {\r\n      setAlertState({\r\n        message: cafeState.errors,\r\n        severity: \"error\",\r\n        showAlert: true,\r\n      });\r\n    }\r\n  }, [cafeState]);\r\n\r\n  useEffect(() => {\r\n    routeParams.id && dispatch(findCafe(routeParams.id));\r\n  }, [routeParams.id]);\r\n\r\n  const onSubmit = (e: Cafe) => {\r\n    console.log(e);\r\n    const newCafeData: Cafe = {\r\n      id: routeParams.id || \"\",\r\n      name: e.name,\r\n      description: e.description,\r\n      logo: e.logo || \"\",\r\n      location: e.location,\r\n    };\r\n\r\n    if (routeParams.id && routeParams.id.length > 0) {\r\n      dispatch(updateCafe(newCafeData));\r\n    } else {\r\n      dispatch(createCafe(newCafeData));\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate(VIEW_CAFE_ROUTE);\r\n  };\r\n\r\n  const validate = (values: Cafe) => {\r\n    const errors = { name: \"\", description: \"\", logo: \"\", location: \"\" };\r\n\r\n    if (!values.name) {\r\n      errors.name = REQUIRED_MSG;\r\n    }\r\n\r\n    if (!values.description) {\r\n      errors.description = REQUIRED_MSG;\r\n    }\r\n\r\n    //commented to implement later\r\n    // if (!values.logo) {\r\n    //   errors.logo = REQUIRED_MSG;\r\n    // }\r\n\r\n    if (!values.location) {\r\n      errors.location = REQUIRED_MSG;\r\n    }\r\n\r\n    if (\r\n      checkStringMinLength(values.name, MIN_TEXT_LENGHT) ||\r\n      checkStringMaxLength(values.name, MAX_TEXT_LENGHT)\r\n    ) {\r\n      errors.name = MIN_MAX_LENGHT_MSG;\r\n    }\r\n\r\n    if (checkStringMaxLength(values.description, MAX_TEXTAREA_LENGHT)) {\r\n      errors.description = MAX_TEXTAREA_LENGHT_MSG;\r\n    }\r\n\r\n    //checking if the errors object is equal to error less state\r\n    if (\r\n      JSON.stringify(errors) ===\r\n      JSON.stringify({ name: \"\", description: \"\", logo: \"\", location: \"\" })\r\n    ) {\r\n      return undefined;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const CafeDetailsForm = () => (\r\n    <Form\r\n      onSubmit={onSubmit}\r\n      initialValues={selectedCafe}\r\n      validate={(values) => validate(values)}\r\n      render={({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Stack sx={{ width: \"500px\" }} spacing={1}>\r\n            <CustomTextField name=\"name\" label=\"Cafe Name\" textBoxFullWidth />\r\n\r\n            <CustomTextField\r\n              name=\"location\"\r\n              label=\"Location\"\r\n              textBoxFullWidth\r\n            />\r\n\r\n            <CustomTextField\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              textBoxFullWidth\r\n              isMultiline\r\n              rows={3}\r\n            />\r\n\r\n            <Box display=\"flex\" flexDirection=\"row\" sx={{ m: 1 }}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Save Cafe Details\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"info\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>\r\n            </Box>\r\n          </Stack>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n  return (\r\n    <>\r\n      {alertState.showAlert && (\r\n        <AlertBox\r\n          showAlert={alertState.showAlert}\r\n          message={alertState.message}\r\n          severity={alertState.severity}\r\n        />\r\n      )}\r\n      {<h2>{isCafeEdit ? `Edit` : `Create`} Cafe</h2>}\r\n      <Box>\r\n        <CafeDetailsForm />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCafe;\r\n","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\employee\\edit-employee.tsx",["176","177"],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\home\\home.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\employee\\view-employee.tsx",["178"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { AppState } from \"../../../store/reducers/rootReducer\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getEmployeeList } from \"../../../store/actions/employeeAction\";\r\nimport { Box, Button, Pagination, Stack } from \"@mui/material\";\r\nimport DataTable from \"../../data-table/data-table.component\";\r\nimport { EDIT_EMPLOYEE_ROUTE } from \"../../../constants/routes\";\r\nimport React from \"react\";\r\n\r\nconst ViewEmployee = () => {\r\n  const dispatch = useDispatch();\r\n  const routeParams = useParams();\r\n  const navigate = useNavigate();\r\n  const employeeList = useSelector((state: AppState) => state.employee);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const GoToEditEmployees = React.memo((value: any) => {\r\n    return (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"warning\"\r\n        size=\"small\"\r\n        onClick={() => navigate(`${EDIT_EMPLOYEE_ROUTE}/${value.data.id}`)}\r\n      >\r\n        Edit\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  const DeleteEmployees = React.memo((value: any) => {\r\n    return (\r\n      <Button variant=\"contained\" color=\"error\" size=\"small\">\r\n        Delete\r\n      </Button>\r\n    );\r\n  });\r\n\r\n  const columns = [\r\n    //{field: \"logo\"},\r\n    { field: \"id\", width: 200 },\r\n    { field: \"name\" },\r\n    { field: \"email\" },\r\n    { field: \"phone\",width: 120,  },\r\n    { field: \"gender\",width: 100, },\r\n    { field: \"cafename\", headerName: \"Cafe\", width: 120},\r\n    { field: \"workeddays\", headerName: \"Days Worked\", width: 50},\r\n    {\r\n      field: \"\",\r\n      width: 130,\r\n      headerName: \"Edit Employee\",\r\n      cellRenderer: GoToEditEmployees,\r\n    },\r\n    {\r\n      field: \"\",\r\n      width: 150,\r\n      headerName: \"Delete Employee\",\r\n      cellRenderer: DeleteEmployees,\r\n    },\r\n  ]\r\n\r\n  const handlePageChange =(event: React.ChangeEvent<any>, page: number) =>{\r\n    setCurrentPage(page);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmployeeList(currentPage, routeParams.id));\r\n  }, [routeParams.id, currentPage]);\r\n\r\n  return (\r\n    <>\r\n      <h2>View Employee</h2>\r\n      <Box mb={1}>\r\n        <Button\r\n          onClick={() => navigate(EDIT_EMPLOYEE_ROUTE)}\r\n          variant=\"contained\"\r\n          color=\"success\"\r\n        >\r\n          Add New Employee\r\n        </Button>\r\n      </Box>\r\n      <Box>\r\n        <DataTable\r\n          cols={columns}\r\n          rows={employeeList.response?.data}\r\n          tableHeight={450}\r\n          tableWidth={1350}\r\n        />\r\n      </Box>\r\n      <Box mt={2}>\r\n        <Stack spacing={2}>\r\n          <Pagination onChange={handlePageChange} count={10} variant=\"outlined\" color=\"primary\" />\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewEmployee;\r\n","C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\reducers\\employeeReducer.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\reducers\\cafeReducer.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\sagas\\employee.saga.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\sagas\\cafe.saga.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\constants\\common.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\actions\\employeeAction.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\store\\actions\\cafeAction.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\data-table\\data-table.component.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\utils\\common.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\hooks\\useCafeListMap.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\utils\\validations.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\views\\cafe\\filter-section.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\custom-text-field\\custome-text-field.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\alert\\alert-box.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\date-selector\\date-selector.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\custom-select-field\\custom-select-field.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\custom-radio-button\\custom-radio-button.tsx",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\services\\apiMethods.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\components\\date-selector\\date-selector.styles.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\services\\builder.ts",[],[],"C:\\Users\\VishwajithJayasinghe\\Documents\\MyDocs\\Projects\\React-front-end\\src\\helpers\\tokenHelper.ts",[],[],{"ruleId":"179","severity":1,"message":"180","line":86,"column":6,"nodeType":"181","endLine":86,"endColumn":18,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"180","line":69,"column":6,"nodeType":"181","endLine":69,"endColumn":22,"suggestions":"183"},{"ruleId":"179","severity":1,"message":"180","line":81,"column":6,"nodeType":"181","endLine":81,"endColumn":22,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"185","line":85,"column":6,"nodeType":"181","endLine":85,"endColumn":8,"suggestions":"186"},{"ruleId":"179","severity":1,"message":"180","line":68,"column":6,"nodeType":"181","endLine":68,"endColumn":35,"suggestions":"187"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["188"],["189"],["190"],"React Hook useMemo has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["191"],["192"],{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"195","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [cafeParams, dispatch]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch, routeParams.id]",{"range":"204","text":"205"},{"range":"206","text":"205"},"Update the dependencies array to be: [dispatch]",{"range":"207","text":"208"},"Update the dependencies array to be: [routeParams.id, currentPage, dispatch]",{"range":"209","text":"210"},[2537,2549],"[cafeParams, dispatch]",[2063,2079],"[dispatch, routeParams.id]",[2672,2688],[2751,2753],"[dispatch]",[2064,2093],"[routeParams.id, currentPage, dispatch]"]